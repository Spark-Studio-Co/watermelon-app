import { AuthLayout } from "../../layouts/auth-layout";
import { View, Image } from "react-native";
import Text from "@/src/shared/ui/text/text";

import { hp, wp } from "@/src/shared/utils/resize-dimensions";
import { Button } from "@/src/shared/ui/button/button";

import { useAuthStore } from "@/src/entities/registration/api/use-auth-store";
import { useLoginStore } from "@/src/entities/login/model/login-store";
import { useGetMe } from "@/src/entities/users/api/use-get-me";
import { useNavigation } from "@react-navigation/native";
import { useState } from "react";

export const SuccessSignUpScreen = () => {
  const { setToken, setRegistrationComplete } = useAuthStore();
  const { responseData } = useLoginStore();
  const navigation = useNavigation();
  const [isChecking, setIsChecking] = useState(false);

  const handleNavigateDashboard = async () => {
    setIsChecking(true);
    console.log("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...");
    console.log("üì± Token:", responseData ? "–ï—Å—Ç—å —Ç–æ–∫–µ–Ω" : "–ù–µ—Ç —Ç–æ–∫–µ–Ω–∞");

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω
    await setToken(responseData);

    // –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try {
      console.log("üåê –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä...");
      const response = await fetch(
        "https://watermelon-backend-production.up.railway.app/api/users/get/me",
        {
          headers: {
            Authorization: `Bearer ${responseData}`,
          },
        }
      );

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const userData = await response.json();
      console.log("üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", userData);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–æ–ª–Ω–µ–Ω –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const isProfileComplete = userData.name && userData.username;
      console.log("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω:", isProfileComplete);

      if (isProfileComplete) {
        // –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω - –ø–æ–º–µ—á–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–∞–∫ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—É—é
        console.log("üéâ –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é");
        await setRegistrationComplete(true);
        console.log("üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ");
      } else {
        // –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞
        console.log("üìù –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é –∞–∫–∫–∞—É–Ω—Ç–∞");
        navigation.navigate("AccountCreation" as never);
        setIsChecking(false);
        return;
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error);
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
      console.log("üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é –∞–∫–∫–∞—É–Ω—Ç–∞ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏");
      navigation.navigate("AccountCreation" as never);
      setIsChecking(false);
      return;
    }

    setIsChecking(false);
  };

  return (
    <AuthLayout>
      <View style={{ height: hp(90), width: wp(90), marginTop: hp(-10) }}>
        <Image
          className={`w-full h-full`}
          resizeMode="contain"
          source={require("../../../images/success_sign_up.png")}
        />
      </View>
      <Button
        onPress={handleNavigateDashboard}
        variant="blue"
        className="w-full flex items-center justify-center"
      >
        <Text weight="regular" className="text-[22px] text-[#FFFFFF] flex">
          {isChecking ? "Checking..." : "Continue"}
        </Text>
      </Button>
    </AuthLayout>
  );
};
