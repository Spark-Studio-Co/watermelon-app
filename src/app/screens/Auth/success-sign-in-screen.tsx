import { AuthLayout } from "../../layouts/auth-layout";
import { View, Image } from "react-native";
import Text from "@/src/shared/ui/text/text";
import { useNavigation } from "@react-navigation/native";

import { hp, wp } from "@/src/shared/utils/resize-dimensions";
import { Button } from "@/src/shared/ui/button/button";
import { useAuthStore } from "@/src/entities/registration/api/use-auth-store";

export const SuccessSignInScreen = () => {
  const { navigate } = useNavigation();
  const {
    completeAuthFlow,
    token,
    tempToken,
    isRegistrationComplete,
    isOnboardingComplete,
  } = useAuthStore();

  const handleContinue = async () => {
    console.log("üöÄ handleContinue –Ω–∞—á–∞–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ");
    console.log("üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:");
    console.log("  Token:", token);
    console.log("  TempToken:", tempToken);
    console.log("  Registration complete:", isRegistrationComplete);
    console.log("  Onboarding complete:", isOnboardingComplete);

    try {
      // –ó–∞–≤–µ—Ä—à–∞–µ–º –≤–µ—Å—å —Ñ–ª–æ—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ–¥–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π
      await completeAuthFlow();
      console.log(
        "‚úÖ –§–ª–æ—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω, —Å—Ç–µ–∫–∏ –¥–æ–ª–∂–Ω—ã –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
      );
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –≤ handleContinue:", error);
    }
  };

  return (
    <AuthLayout>
      <View style={{ height: hp(90), width: wp(90), marginTop: hp(-10) }}>
        <Image
          className={`w-full h-full`}
          resizeMode="contain"
          source={require("../../../images/success_sign_in.png")}
        />
      </View>
      <Button
        onPress={handleContinue}
        variant="blue"
        className="w-full flex items-center justify-center"
      >
        <Text weight="regular" className="text-[22px] text-[#FFFFFF] flex">
          Continue
        </Text>
      </Button>
    </AuthLayout>
  );
};
